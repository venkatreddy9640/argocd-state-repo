# ===================================================================
# ArgoCD Application for Prometheus Stack (Best Practice Approach)
# Store this file in your GitOps repository (separate from app source code)
# File: monitoring/prometheus-stack-application.yaml
# ===================================================================

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default

  # Multi-source configuration: Helm chart + values from Git
  sources:
    - repoURL: https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      targetRevision: "57.2.0"
      helm:
        valueFiles:
          - $values/monitoring/values.yaml
    - repoURL: https://github.com/your-org/gitops-repo.git  # Replace with your GitOps repo URL
      targetRevision: HEAD
      ref: values

  # Destination cluster
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring

  # Sync policy
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true

---
# ===================================================================
# Alternative: Values file approach (values.yaml in same Git repo)
# ===================================================================
# If you prefer to use values.yaml files, create this structure:
#
# monitoring/
# ├── prometheus-stack-application.yaml  (this file)
# └── values.yaml                       (custom values)
#
# Then modify the source section above to:
# source:
#   repoURL: https://prometheus-community.github.io/helm-charts
#   chart: kube-prometheus-stack
#   targetRevision: "57.2.0"
#   helm:
#     valueFiles:
#       - $values/monitoring/values.yaml
# sources:
#   - repoURL: https://prometheus-community.github.io/helm-charts
#     chart: kube-prometheus-stack
#     targetRevision: "57.2.0"
#     helm:
#       valueFiles:
#         - $values/monitoring/values.yaml
#   - repoURL: https://github.com/your-org/gitops-repo.git
#     targetRevision: HEAD
#     ref: values
---
# ===================================================================
# Java Application Pod Annotations Required
# Add these annotations to your Java app deployment:
# ===================================================================
# annotations:
#   prometheus.io/scrape: "true"
#   prometheus.io/port: "8080"
#   prometheus.io/path: "/actuator/prometheus"
#
# Access Grafana via LoadBalancer:
# kubectl get svc prometheus-stack-grafana -n monitoring
# Access Grafana via LoadBalancer on port 8300:
# kubectl get svc prometheus-stack-grafana -n monitoring
# URL: http://localhost:8300
# Username: admin / Password: admin123